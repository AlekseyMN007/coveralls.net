<?xml version="1.0" encoding="us-ascii"?>
<?xml-stylesheet href="style.xsl" type="text/xsl"?>
<class name="Game" fullname="GameOfLife.Game" namespace="GameOfLife">
  <coverage hit="0" missed="47" coverage="0" />
  <source sourceFile="/home/travis/build/csMACnz/Coveralls.net-Samples/src/GameOfLife/Game.cs">
    <l line="1" count="-1">using System;</l>
    <l line="2" count="-1">using System.Linq;</l>
    <l line="3" count="-1" />
    <l line="4" count="-1">namespace GameOfLife</l>
    <l line="5" count="-1">{</l>
    <l line="6" count="-1">    public static class Game</l>
    <l line="7" count="-1">    {</l>
    <l line="8" count="-1">        public static void DrawWorld(World world)</l>
    <l line="9" count="-1">        {</l>
    <l line="10" count="0">            foreach (int row in Enumerable.Range(0, world.Height))</l>
    <l line="11" count="0">            {</l>
    <l line="12" count="0">                foreach (int col in Enumerable.Range(0, world.Width))</l>
    <l line="13" count="0">                {</l>
    <l line="14" count="0">                    var isAlive = world.IsAlive(row, col);</l>
    <l line="15" count="0">                    Console.Write(isAlive ? "[#]" : "[ ]");</l>
    <l line="16" count="0">                }</l>
    <l line="17" count="0">                Console.WriteLine("");</l>
    <l line="18" count="-1">            }</l>
    <l line="19" count="-1">        }</l>
    <l line="20" count="-1" />
    <l line="21" count="-1">        public static World GetNextWorldState(World world)</l>
    <l line="22" count="-1">        {</l>
    <l line="23" count="0">            var newWorldData = new bool[world.Height, world.Width];</l>
    <l line="24" count="0">            foreach (int row in Enumerable.Range(0, world.Height))</l>
    <l line="25" count="0">            {</l>
    <l line="26" count="0">                foreach (int col in Enumerable.Range(0, world.Width))</l>
    <l line="27" count="0">                {</l>
    <l line="28" count="0">                    var neighbourLiveCount = 0;</l>
    <l line="29" count="0">                    var offsets = new[] {-1, 0, 1};</l>
    <l line="30" count="0">                    foreach (int rowOffset in offsets)</l>
    <l line="31" count="0">                    {</l>
    <l line="32" count="0">                        foreach (int colOffset in offsets)</l>
    <l line="33" count="0">                        {</l>
    <l line="34" count="0">                            if (rowOffset == 0 &amp;&amp; colOffset == 0) continue;</l>
    <l line="35" count="0">                            var neighbourRow = row + rowOffset;</l>
    <l line="36" count="0">                            var neightbourColumn = col + colOffset;</l>
    <l line="37" count="0">                            if (neightbourColumn &gt;= 0 &amp;&amp;</l>
    <l line="38" count="0">                                neightbourColumn &lt; world.Width &amp;&amp;</l>
    <l line="39" count="0">                                neighbourRow &gt;= 0 &amp;&amp;</l>
    <l line="40" count="0">                                neighbourRow &lt; world.Height &amp;&amp;</l>
    <l line="41" count="0">                                world.IsAlive(neighbourRow, neightbourColumn)</l>
    <l line="42" count="0">                                )</l>
    <l line="43" count="0">                            {</l>
    <l line="44" count="0">                                neighbourLiveCount++;</l>
    <l line="45" count="0">                            }</l>
    <l line="46" count="0">                        }</l>
    <l line="47" count="0">                    }</l>
    <l line="48" count="0">                    bool newState;</l>
    <l line="49" count="0">                    var isCurrentlyAlive = world.IsAlive(row, col);</l>
    <l line="50" count="0">                    if (isCurrentlyAlive)</l>
    <l line="51" count="0">                    {</l>
    <l line="52" count="0">                        newState = neighbourLiveCount == 2 || neighbourLiveCount == 3;</l>
    <l line="53" count="0">                    }</l>
    <l line="54" count="0">                    else</l>
    <l line="55" count="0">                    {</l>
    <l line="56" count="0">                        newState = neighbourLiveCount == 3;</l>
    <l line="57" count="0">                    }</l>
    <l line="58" count="0">                    newWorldData[row, col] = newState;</l>
    <l line="59" count="0">                }</l>
    <l line="60" count="0">            }</l>
    <l line="61" count="0">            return new World(newWorldData);</l>
    <l line="62" count="-1">        }</l>
    <l line="63" count="-1">    }</l>
    <l line="64" count="-1">}</l>
  </source>
</class>